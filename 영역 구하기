#include<iostream>
using namespace std;

int N;
char exist_house[25][25];
bool visited[25][25];
int dx[4] = { 0,0,-1,1 };
int dy[4] = { -1,1,0,0 };
int house_size;
int result[1000] = { 0, };

void dfs(int x, int y)
{
	visited[y][x] = true;
	house_size++;
	for (int i = 0; i < 4; i++) 
	{
		int nx = x + dx[i];
		int ny = y + dy[i];
		if (nx >= 0 && nx < 25 && ny >= 0 && ny < 25)
		{
			if (exist_house[ny][nx] == '1' && visited[ny][nx] == false)
				dfs(nx, ny);
		}
	}
}

void get_sort_house(int value)
{
	int size = 0;
	while (result[size] != 0) { size++; }
	result[size] = value;

	for (int i = size; i > 0; i--) {
		if (result[i] < result[i - 1]) {
			int tmp = result[i];
			result[i] = result[i - 1];
			result[i - 1] = tmp;
		}
	}
}

int main()
{
	cin >> N;
	for (int y = 0; y < N; y++)
		for (int x = 0; x < N; x++)
			cin >> exist_house[y][x];

	for (int i = 0; i < N; i++) {
		for (int j = 0; j < N; j++)
		{
			if (exist_house[i][j] == '1' && visited[i][j] == false)
			{
				house_size = 0;
				dfs(j, i);
				get_sort_house(house_size);
			}
		}
	}
	int size = 0;
	while (result[size] != 0) { size++; }
	cout << size << endl;
	int i = 0;
	while (result[i] != 0) { 
		cout << result[i] << endl;
		i++; 
	}
}
