#include<iostream>

using namespace std;

void Hanoi(int N, int start);
int pos[21];

int main()
{
	for (int i = 0; i <= 20; i++) { pos[i] = 1; }
	int N, A, B;
	cin >> N;
	int K = 1;
	for (int i = 0; i < N; i++) { K = K * 2; }
	cout << K - 1 << endl;
	Hanoi(N,N);
	return 0;
}

void Hanoi(int N, int start)
{
	if (N != 1) { Hanoi(N - 1, start) ; }
	
	if (start % 2 == 1)
	{
		if (N % 2 == 1)
		{
			cout << pos[N] << ' ';
			pos[N] = pos[N] - 1;
			if (pos[N] == 0) { pos[N] = 3; }
			cout << pos[N] << '\n';
		}
		else if (N % 2 == 0)
		{
			cout << pos[N] << ' ';
			pos[N] = pos[N] + 1;
			if (pos[N] == 4) { pos[N] = 1; }
			cout << pos[N] << '\n';
		}
	}
	else if (start % 2 == 0)
	{
		if (N % 2 == 0)
		{
			cout << pos[N] << ' ';
			pos[N] = pos[N] - 1;
			if (pos[N] == 0) { pos[N] = 3; }
			cout << pos[N] << '\n';
		}
		else if (N % 2 == 1)
		{
			cout << pos[N] << ' ';
			pos[N] = pos[N] + 1;
			if (pos[N] == 4) { pos[N] = 1; }
			cout << pos[N] << '\n';
		}
	}
	
	if (N != 1) { Hanoi(N - 1, start) ; }
}
	
// 이 아래는 다른 방식의 구분
/*
int H_tower(int N, int a, int b)
{
	if(N==0){
		return 0;
	}
	int c;
	if((a==1&&b==2)||(a==2&&b==1)){
		c=3;
	}
	else if((a==1&&b==3)||(a==3&&b==1)){
		c=2;
	}
	else if((a==2&&b==3)||(a==3&&b==2)){
		c=1;
	}
	H_tower(N-1, a, c);
	printf("%d %d\n", a, b);
	H_tower(N-1, c, b);
}
*/
